import itertools
import re


n = 4
k = 2
#R = PolynomialRing(QQ, [f'p_{i}{j}' for (i,j) in itertools.product(range(n),repeat=k)])

R = PolynomialRing(QQ, [f'p_{i}{j}' for (i,j) in itertools.product(range(n),repeat=k) if i > j])
R.inject_variables()


for i in range(n):
    exec(f"p_{i}{i} = 0")

for i in range(n):
    for j in range(i+1,n):
        exec(f"p_{i}{j} = -p_{j}{i}")



# e.g. p_(0,1) -> p_01
def clean_string(s):
    s = re.sub(r'_\((\d+),(\d+)\)', r'_\1\2', s)
    s = re.sub(r'{',r'',s)
    s = re.sub(r'}',r'',s)
    s = re.sub(r'ideal',r'Ideal',s)
    s = re.sub(r'^',r'**',s)
    return s


def m2sage(s):
    s = s.replace

s = "ideal(2*p_(0,1)*p_(0,2)+3*p_(0,2)^2+(8/9)*p_(0,2)*p_(1,2)+2*p_(0,1)*p_(0,3)+(7/6)*p_(0,2)*p_(0,3)+(5/2)*p_(1,2)*p_(0,3)+(5/9)*p_(0,3)^2+(5/2)*p_(0,2)*p_(1,3)+(6/5)*p_(0,3)*p_(1,3)+(7/9)*p_(0,2)*p_(2,3)+(1/4)*p_(0,3)*p_(2,3),(7/2)*p_(0,1)*p_(1,2)+6*p_(0,2)*p_(1,2)+3*p_(1,2)^2+p_(1,2)*p_(0,3)+8*p_(0,1)*p_(1,3)+p_(0,2)*p_(1,3)+(7/6)*p_(1,2)*p_(1,3)+2*p_(0,3)*p_(1,3)+(5/9)*p_(1,3)^2+7*p_(1,2)*p_(2,3)+(6/7)*p_(1,3)*p_(2,3),(7/2)*p_(0,1)*p_(0,2)+6*p_(0,2)^2-2*p_(0,1)*p_(1,2)-(8/9)*p_(1,2)^2+8*p_(0,1)*p_(0,3)+2*p_(0,2)*p_(0,3)+2*p_(0,3)^2-2*p_(0,1)*p_(1,3)-5*p_(1,2)*p_(1,3)-(6/5)*p_(1,3)^2+7*p_(0,2)*p_(2,3)-(7/9)*p_(1,2)*p_(2,3)+(6/7)*p_(0,3)*p_(2,3)-(1/4)*p_(1,3)*p_(2,3),-2*p_(0,1)^2-3*p_(0,1)*p_(0,2)-(8/9)*p_(0,1)*p_(1,2)+(3/4)*p_(0,1)*p_(0,3)+7*p_(0,2)*p_(0,3)+(7/9)*p_(1,2)*p_(0,3)+(6/7)*p_(0,3)^2-(5/2)*p_(0,1)*p_(1,3)+(1/4)*p_(0,3)*p_(1,3)-(7/9)*p_(0,1)*p_(2,3)+2*p_(0,3)*p_(2,3),-(14/9)*p_(0,1)*p_(1,2)-(7/2)*p_(0,2)*p_(1,2)-2*p_(1,2)^2-8*p_(1,2)*p_(0,3)-2*p_(1,2)*p_(1,3)+8*p_(0,1)*p_(2,3)+p_(0,2)*p_(2,3)-(3/4)*p_(1,2)*p_(2,3)+2*p_(0,3)*p_(2,3)+(5/9)*p_(1,3)*p_(2,3)+(6/7)*p_(2,3)^2,(14/9)*p_(0,1)^2+(7/2)*p_(0,1)*p_(0,2)-3*p_(0,2)*p_(1,2)-(8/9)*p_(1,2)^2+16*p_(0,1)*p_(0,3)+p_(0,2)*p_(0,3)+2*p_(0,3)^2+2*p_(0,1)*p_(1,3)-(5/2)*p_(1,2)*p_(1,3)+(5/9)*p_(0,3)*p_(1,3)-7*p_(0,2)*p_(2,3)-(14/9)*p_(1,2)*p_(2,3)-(1/4)*p_(1,3)*p_(2,3)-2*p_(2,3)^2,-2*p_(0,1)^2-(23/12)*p_(0,1)*p_(0,2)-7*p_(0,2)^2-(5/2)*p_(0,1)*p_(1,2)-(7/9)*p_(0,2)*p_(1,2)-(5/9)*p_(0,1)*p_(0,3)-(6/7)*p_(0,2)*p_(0,3)-(6/5)*p_(0,1)*p_(1,3)-(1/4)*p_(0,2)*p_(1,3)-(1/4)*p_(0,1)*p_(2,3)-2*p_(0,2)*p_(2,3),-(14/9)*p_(0,1)*p_(1,3)-(7/2)*p_(0,2)*p_(1,3)-2*p_(1,2)*p_(1,3)-8*p_(0,3)*p_(1,3)-2*p_(1,3)^2-(7/2)*p_(0,1)*p_(2,3)-6*p_(0,2)*p_(2,3)-3*p_(1,2)*p_(2,3)-p_(0,3)*p_(2,3)-(23/12)*p_(1,3)*p_(2,3)-7*p_(2,3)^2,(14/9)*p_(0,1)^2+7*p_(0,1)*p_(0,2)+6*p_(0,2)^2+2*p_(0,1)*p_(1,2)+3*p_(0,2)*p_(1,2)+8*p_(0,1)*p_(0,3)+p_(0,2)*p_(0,3)-(5/2)*p_(1,2)*p_(1,3)-(5/9)*p_(0,3)*p_(1,3)-(6/5)*p_(1,3)^2-(7/9)*p_(1,2)*p_(2,3)-(6/7)*p_(0,3)*p_(2,3)-(1/2)*p_(1,3)*p_(2,3)-2*p_(2,3)^2,(7/2)*p_(0,1)^2+6*p_(0,1)*p_(0,2)+3*p_(0,1)*p_(1,2)+p_(0,1)*p_(0,3)+(23/12)*p_(0,1)*p_(1,3)+7*p_(0,2)*p_(1,3)+(7/9)*p_(1,2)*p_(1,3)+(6/7)*p_(0,3)*p_(1,3)+(1/4)*p_(1,3)^2+7*p_(0,1)*p_(2,3)+2*p_(1,3)*p_(2,3),(14/9)*p_(0,1)*p_(0,2)+(7/2)*p_(0,2)^2+2*p_(0,2)*p_(1,2)+8*p_(0,2)*p_(0,3)+2*p_(0,2)*p_(1,3)+2*p_(0,1)*p_(2,3)+(23/12)*p_(0,2)*p_(2,3)+(5/2)*p_(1,2)*p_(2,3)+(5/9)*p_(0,3)*p_(2,3)+(6/5)*p_(1,3)*p_(2,3)+(1/4)*p_(2,3)^2,(14/9)*p_(0,1)^2-6*p_(0,2)^2+2*p_(0,1)*p_(1,2)-3*p_(0,2)*p_(1,2)+8*p_(0,1)*p_(0,3)-p_(0,2)*p_(0,3)+4*p_(0,1)*p_(1,3)+(5/2)*p_(1,2)*p_(1,3)+(5/9)*p_(0,3)*p_(1,3)+(6/5)*p_(1,3)^2-14*p_(0,2)*p_(2,3)-(7/9)*p_(1,2)*p_(2,3)-(6/7)*p_(0,3)*p_(2,3)-2*p_(2,3)^2,8*p_(0,1)^2+p_(0,1)*p_(0,2)-(3/4)*p_(0,1)*p_(1,2)-7*p_(0,2)*p_(1,2)-(7/9)*p_(1,2)^2+2*p_(0,1)*p_(0,3)-(6/7)*p_(1,2)*p_(0,3)+(5/9)*p_(0,1)*p_(1,3)-(1/4)*p_(1,2)*p_(1,3)+(6/7)*p_(0,1)*p_(2,3)-2*p_(1,2)*p_(2,3),(14/9)*p_(0,1)*p_(0,3)+(7/2)*p_(0,2)*p_(0,3)+2*p_(1,2)*p_(0,3)+8*p_(0,3)^2+2*p_(0,3)*p_(1,3)-2*p_(0,1)*p_(2,3)-3*p_(0,2)*p_(2,3)-(8/9)*p_(1,2)*p_(2,3)+(3/4)*p_(0,3)*p_(2,3)-(5/2)*p_(1,3)*p_(2,3)-(7/9)*p_(2,3)^2,(14/9)*p_(0,1)^2+(7/2)*p_(0,1)*p_(0,2)+4*p_(0,1)*p_(1,2)+3*p_(0,2)*p_(1,2)+(8/9)*p_(1,2)^2-p_(0,2)*p_(0,3)-2*p_(0,3)^2+2*p_(0,1)*p_(1,3)+(5/2)*p_(1,2)*p_(1,3)-(5/9)*p_(0,3)*p_(1,3)-7*p_(0,2)*p_(2,3)-(12/7)*p_(0,3)*p_(2,3)-(1/4)*p_(1,3)*p_(2,3)-2*p_(2,3)^2,8*p_(0,1)*p_(0,2)+p_(0,2)^2+2*p_(0,1)*p_(1,2)+(7/6)*p_(0,2)*p_(1,2)+(5/2)*p_(1,2)^2+2*p_(0,2)*p_(0,3)+(5/9)*p_(1,2)*p_(0,3)+(5/9)*p_(0,2)*p_(1,3)+(6/5)*p_(1,2)*p_(1,3)+(6/7)*p_(0,2)*p_(2,3)+(1/4)*p_(1,2)*p_(2,3),(7/2)*p_(0,1)*p_(0,3)+6*p_(0,2)*p_(0,3)+3*p_(1,2)*p_(0,3)+p_(0,3)^2+2*p_(0,1)*p_(1,3)+3*p_(0,2)*p_(1,3)+(8/9)*p_(1,2)*p_(1,3)+(7/6)*p_(0,3)*p_(1,3)+(5/2)*p_(1,3)^2+7*p_(0,3)*p_(2,3)+(7/9)*p_(1,3)*p_(2,3),(7/2)*p_(0,1)*p_(0,2)+6*p_(0,2)^2+2*p_(0,1)*p_(1,2)+6*p_(0,2)*p_(1,2)+(8/9)*p_(1,2)^2-8*p_(0,1)*p_(0,3)-2*p_(0,3)^2-2*p_(0,1)*p_(1,3)-(10/9)*p_(0,3)*p_(1,3)-(6/5)*p_(1,3)^2+7*p_(0,2)*p_(2,3)+(7/9)*p_(1,2)*p_(2,3)-(6/7)*p_(0,3)*p_(2,3)-(1/4)*p_(1,3)*p_(2,3))"
s = clean_string(s)

I = Ideal(2*p_01*p_02+3*p_02^2+(8/9)*p_02*p_12+2*p_01*p_03+(7/6)*p_02*p_03+(5/2)*p_12*p_03+(5/9)*p_03^2+(5/2)*p_02*p_13+(6/5)*p_03*p_13+(7/9)*p_02*p_23+(1/4)*p_03*p_23,(7/2)*p_01*p_12+6*p_02*p_12+3*p_12^2+p_12*p_03+8*p_01*p_13+p_02*p_13+(7/6)*p_12*p_13+2*p_03*p_13+(5/9)*p_13^2+7*p_12*p_23+(6/7)*p_13*p_23,(7/2)*p_01*p_02+6*p_02^2-2*p_01*p_12-(8/9)*p_12^2+8*p_01*p_03+2*p_02*p_03+2*p_03^2-2*p_01*p_13-5*p_12*p_13-(6/5)*p_13^2+7*p_02*p_23-(7/9)*p_12*p_23+(6/7)*p_03*p_23-(1/4)*p_13*p_23,-2*p_01^2-3*p_01*p_02-(8/9)*p_01*p_12+(3/4)*p_01*p_03+7*p_02*p_03+(7/9)*p_12*p_03+(6/7)*p_03^2-(5/2)*p_01*p_13+(1/4)*p_03*p_13-(7/9)*p_01*p_23+2*p_03*p_23,-(14/9)*p_01*p_12-(7/2)*p_02*p_12-2*p_12^2-8*p_12*p_03-2*p_12*p_13+8*p_01*p_23+p_02*p_23-(3/4)*p_12*p_23+2*p_03*p_23+(5/9)*p_13*p_23+(6/7)*p_23^2,(14/9)*p_01^2+(7/2)*p_01*p_02-3*p_02*p_12-(8/9)*p_12^2+16*p_01*p_03+p_02*p_03+2*p_03^2+2*p_01*p_13-(5/2)*p_12*p_13+(5/9)*p_03*p_13-7*p_02*p_23-(14/9)*p_12*p_23-(1/4)*p_13*p_23-2*p_23^2,-2*p_01^2-(23/12)*p_01*p_02-7*p_02^2-(5/2)*p_01*p_12-(7/9)*p_02*p_12-(5/9)*p_01*p_03-(6/7)*p_02*p_03-(6/5)*p_01*p_13-(1/4)*p_02*p_13-(1/4)*p_01*p_23-2*p_02*p_23,-(14/9)*p_01*p_13-(7/2)*p_02*p_13-2*p_12*p_13-8*p_03*p_13-2*p_13^2-(7/2)*p_01*p_23-6*p_02*p_23-3*p_12*p_23-p_03*p_23-(23/12)*p_13*p_23-7*p_23^2,(14/9)*p_01^2+7*p_01*p_02+6*p_02^2+2*p_01*p_12+3*p_02*p_12+8*p_01*p_03+p_02*p_03-(5/2)*p_12*p_13-(5/9)*p_03*p_13-(6/5)*p_13^2-(7/9)*p_12*p_23-(6/7)*p_03*p_23-(1/2)*p_13*p_23-2*p_23^2,(7/2)*p_01^2+6*p_01*p_02+3*p_01*p_12+p_01*p_03+(23/12)*p_01*p_13+7*p_02*p_13+(7/9)*p_12*p_13+(6/7)*p_03*p_13+(1/4)*p_13^2+7*p_01*p_23+2*p_13*p_23,(14/9)*p_01*p_02+(7/2)*p_02^2+2*p_02*p_12+8*p_02*p_03+2*p_02*p_13+2*p_01*p_23+(23/12)*p_02*p_23+(5/2)*p_12*p_23+(5/9)*p_03*p_23+(6/5)*p_13*p_23+(1/4)*p_23^2,(14/9)*p_01^2-6*p_02^2+2*p_01*p_12-3*p_02*p_12+8*p_01*p_03-p_02*p_03+4*p_01*p_13+(5/2)*p_12*p_13+(5/9)*p_03*p_13+(6/5)*p_13^2-14*p_02*p_23-(7/9)*p_12*p_23-(6/7)*p_03*p_23-2*p_23^2,8*p_01^2+p_01*p_02-(3/4)*p_01*p_12-7*p_02*p_12-(7/9)*p_12^2+2*p_01*p_03-(6/7)*p_12*p_03+(5/9)*p_01*p_13-(1/4)*p_12*p_13+(6/7)*p_01*p_23-2*p_12*p_23,(14/9)*p_01*p_03+(7/2)*p_02*p_03+2*p_12*p_03+8*p_03^2+2*p_03*p_13-2*p_01*p_23-3*p_02*p_23-(8/9)*p_12*p_23+(3/4)*p_03*p_23-(5/2)*p_13*p_23-(7/9)*p_23^2,(14/9)*p_01^2+(7/2)*p_01*p_02+4*p_01*p_12+3*p_02*p_12+(8/9)*p_12^2-p_02*p_03-2*p_03^2+2*p_01*p_13+(5/2)*p_12*p_13-(5/9)*p_03*p_13-7*p_02*p_23-(12/7)*p_03*p_23-(1/4)*p_13*p_23-2*p_23^2,8*p_01*p_02+p_02^2+2*p_01*p_12+(7/6)*p_02*p_12+(5/2)*p_12^2+2*p_02*p_03+(5/9)*p_12*p_03+(5/9)*p_02*p_13+(6/5)*p_12*p_13+(6/7)*p_02*p_23+(1/4)*p_12*p_23,(7/2)*p_01*p_03+6*p_02*p_03+3*p_12*p_03+p_03^2+2*p_01*p_13+3*p_02*p_13+(8/9)*p_12*p_13+(7/6)*p_03*p_13+(5/2)*p_13^2+7*p_03*p_23+(7/9)*p_13*p_23,(7/2)*p_01*p_02+6*p_02^2+2*p_01*p_12+6*p_02*p_12+(8/9)*p_12^2-8*p_01*p_03-2*p_03^2-2*p_01*p_13-(10/9)*p_03*p_13-(6/5)*p_13^2+7*p_02*p_23+(7/9)*p_12*p_23-(6/7)*p_03*p_23-(1/4)*p_13*p_23)


